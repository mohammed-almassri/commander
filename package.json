{
  "name": "commander",
  "displayName": "commander",
  "description": "Add commands to your workspace and run them from the gui",
  "version": "0.0.1",
  "publisher": "mohammed-almassri",
  "repository": {
    "type": "git",
    "url": "https://github.com/mohammed-almassri/commander"
  },
  "engines": {
    "vscode": "^1.91.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "scope": "application",
      "type": "object",
      "properties": {
        "commander.restrictedPatterns":{
          "type": "array",
          "default": [],
          "description": "A list of patterns that are restricted from being executed.",
          "items": {
            "type": "string"
          }
        },
        "commander.commands": {
          "type": "array",
          "default": [],
          "description": "User-defined commands for the Commander extension.",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label of the command."
              },
              "command": {
                "anyOf": [
                  {
                    "type": "string",
                    "description": "A single command to execute."
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of commands to execute sequentially."
                  }
                ],
                "description": "The command(s) to be executed."
              },
              "split": {
                "type": "boolean",
                "default": false,
                "description": "If true, commands will run in parallel in split terminals."
              },
              "reuseTerminal": {
                "type": "boolean",
                "default": true,
                "description": "If false, every call to the command will open a new terminal."
              },
              "overrideSecurity": {
                "type": "boolean",
                "default": false,
                "description": "If true, the command will run even if it is in the restricted commands list."
              }
            },
            "required": [
              "label",
              "command"
            ]
          }
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "commanderViewContainer",
          "title": "Commander",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "commanderViewContainer": [
        {
          "id": "commanderView",
          "name": "Commands"
        }
      ]
    },
    "commands": [
      {
        "command": "commander.refresh",
        "title": "Refresh Commands"
      },
      {
        "command": "commander.runCommand",
        "title": "Run Command"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.91.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "eslint": "^8.57.0",
    "esbuild": "^0.21.5",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0"
  }
}
